" {{{ Pentadactyl configuration   -*- vimrc -*-
"
" Massimo Lauria 2014, 2015
"
" This configuration is supposed to be used on Linux and MacOSX.
" Unfortunately on MacOSX firefox does not get the Alt key. For this
" reason the basic keybindings do not use modifiers. This is probably
" a good idea in any case, since there is no much reason to use
" modifiers while browsing. Another consequences is that few actions
" cannot be performed with keyboards (like scrolling left/right).
" Those actions should be rare enough that resorting to mouse should
" not be a problem.
"
" The rationale is that disruptive actions should have double letter
" (rr, dd, uu, ...).
"
" }}}


" {{{ Options
"

set go=Cs
" No toolbar and scrollbars by default

set complete=bookmark,location
" No toolbar and scrollbars by default

set history=100
" Command line and search patterns history

set incfind
" Show pattern matches as you type

set hlfind
" Hilight previous search pattern matches

set findcase=smart
" Ignore case in search unless pattern has uppercase chars

set showtabline=never
" No tabbar

set showstatuslinks=status
" Show destination links in 1=status line, 2=command line

set hintkeys=asdfg;lkjh

" Small smooth scrolling"
set scrolltime=0
set scrollsteps=5

set! browser.tabs.closeWindowWithLastTab=false
" Do not close the window if last tab is closed.


" Ex commands output in a new tab by default (prefs, addons...)
set newtab=all

" Load external files
loadplugins '\.(js|penta)$'
:source ~/personal/conf/pentadactyl-sensitive
:source ~/config/pentadactyl/user.css
:source ~/config/pentadactyl/emacs.rc


" {{{ Key bindings

:map -builtin <SPACE> :
:map -builtin <A-x> :



" Motion command
:map -builtin  i 4k
:map -builtin  k 4j
:map -builtin  I <PageUp>
:map -builtin  K <PageDown>
:map -builtin  <C-i> <PageUp>
:map -builtin  <C-k> <PageDown>
:map -builtin  <Left>  2h
:map -builtin  <Right> 2l
:map -builtin  <Up>    4k
:map -builtin  <Down>  4j
"------------------------------
:map -builtin  <Home> gg
:map -builtin  <End>  G
"------------------------------
:map -builtin  u <Nop>
:map -builtin  o <Nop>
:map -builtin  uu :back<CR>
:map -builtin  oo :forward<CR>
"------------------------------
:map -builtin  j :tabNext<CR>
:map -builtin  l :tabnext<CR>


:map -builtin  gg :open<SPACE>


" Open links (h: normal, H: new tab, <C-h>: new tab background)
:map -builtin  h f
:map -builtin  H ;t
:map -builtin  <C-h> ;b
:map -builtin  f <Nop>
hi -a Hint font-size: 14pt !important;

" Buffer commands
"
" list and swap
:map -builtin  b          :buffer<SPACE>
:map -builtin  <C-x>b     :buffer<SPACE>
:map -builtin  <C-x><C-b> :buffer<SPACE>

" Tabs
:map -builtin  d <Nop>
:map -builtin  D <Nop>
:map -builtin  <C-x>k :tabclose<CR>
:map -builtin  dd :tabclose<CR>
:map -builtin  rr :undo<CR>
:map -builtin  tt :tabopen<SPACE>

" Avoid quit on C-q, and it's more suitable for Stop here
:map -builtin  q     :stop<CR>
:map -builtin  <C-q> :stop<CR>


" Avoid quit commands
:map -builtin  Z <Nop>
:map -builtin  ZZ <Nop>

" Zoom 
:map -builtin  \- ZO
:map -builtin  = ZI
:map -builtin  _ zo
:map -builtin  + zi

" Extended hint mode with M-j
"  ; - focus link, a - save, y - copy link, O - :open query, T - for :tabopen ...
:map -builtin  , ;
:map -builtin  . :


" Use C-s and C-r for searching (n/N for next/prev as in less)
:map -builtin  <C-s> /
:map -builtin  <C-r> ?

" Clipboard
" y - Copy the current URL 
" p - paste the current clipboard as URL
" Y - Copy selected text
" P - paste the current selection to a new buffer

" Edit URL
:map -builtin  e O


" Help
:map -builtin  <C-h>i :help<CR>
:map -builtin  <F1> :help<CR>


" Macro Record and Play
:map -builtin  <F3> q
:map -builtin  <F4> @

" Set a mark at the cursor with C-x r m
:map -builtin  <C-x>rm m

" Jump to the mark in the current buffer with C-x r b
:map -builtin  <C-x>rb '

" C-v was pass-next, remap to bind with default keys
:map -builtin  <C-d> <C-v>
"
" C-x C-f starts the "Open File" dialog (C-x C-s is Save)
map <C-x><C-f> <C-d><C-o>
map <C-x><C-s> <C-d><C-s>


" Mail/Rss commands
command -description "Mail reader"  mail :open www.gmail.com
command -description "News reader"  rss  :open digg.com/reader/
command -description "Mail reader"  fb   :open www.facebook.com
command -description "News reader"  tw   :open www.twitter.com


" Frequent websites
command -description "Open mail/rss/twitter/fb input feeds (not a good idea...)"
        \ input
        \ :open https://mail.google.com/mail  | https://digg.com/reader | https://www.twitter.com | https://www.facebook.com

command -description "Web material to read"
        \ saved
        \ :open https://www.instapaper.com/u | http://getpocket.com/a/queue/list/


" Following commands do not work without the bookmarklets. I could
" embed then into the rc file (but then I could use then only in
" firefox + pentadactyl.

" Org-Mode commands (Implemented by bookmarklets)
command -description "Capture in Emacs"    org-capture     :open org-capture
command -description "Store Link in Emacs"  org-store-link  :open org-store-link


" Read Later commands
command -description "Read later on Instapaper"  ip      :open rl-instapaper
command -description "View later on Pocket"      pocket  :open rl-pocket
command -description "Format page in Instapaper" format  :open format-instapaper
" Defaults
command -description "Read later (default)"      rl      :open rl-instapaper

" Translation commands
command -description "Translate to Italian"  italiano     :open italiano
command -description "Translate to English"  inglese      :open inglese
command -description "Translate to Swedish"  svedese      :open svedese
